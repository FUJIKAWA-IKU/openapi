openapi: 3.0.0
info:
  version: 1.0.0
  title: 個人開発API
  description: APIの定義書
servers:
  - url: 'http://localhost:8003'
    description: Local Mock server
  - url: 'http://localhost:3000'
    description: Local API server
paths:
  /api/mypage:
    get:
      tags:
        - mypage
      description: マイページの情報を取得する
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    put:
      tags:
        - mypage
      description: マイページの情報を更新する
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /api/login:
    post:
      tags:
        - login
      description: ログインする
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
  /api/registration:
    post:
      tags:
        - registration
      description: ユーザーを新規登録する
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_profile:
                    $ref: '#/components/schemas/UserProfile'
                  informaiton:
                    $ref: '#/components/schemas/Login'
  /api/search:
    get:
      tags:
        - search
      description: マッチング度が高いユーザー一覧ページ
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  '/api/user_profile/{user_id}':
    get:
      tags:
        - user_detail
      description: ユーザーの詳細情報を取得する
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  '/api/like/{user_id}':
    get:
      tags:
        - like
      description: ユーザーの詳細情報を取得する
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    post:
      tags:
        - like
      description: ユーザーにいいねを押す
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    put:
      tags:
        - like
      description: いいねを返す
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  '/api/like_from/{user_id}':
    get:
      tags:
        - like_from
      description: ユーザーからのいいね一覧ページ取得
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  '/api/matching/{user_id}':
    get:
      tags:
        - matching
      description: マッチングしたユーザー一覧を取得する
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  '/api/chat_room/{chat_room_id}':
    get:
      tags:
        - chat_room
      description: チャット画面
      parameters:
        - $ref: '#/components/parameters/ChatRoomId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    post:
      tags:
        - chat_room
      description: チャットの投稿
      parameters:
        - $ref: '#/components/parameters/ChatRoomId'
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
components:
  schemas:
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100
        user_id:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: ふじかわ
        age:
          type: integer
          format: int64
          example: 28
        gender:
          type: integer
          format: int64
          example: 2
        level:
          type: integer
          format: int64
          example: 28
        purpose:
          type: integer
          format: int64
          example: 2
        how_to_connect:
          type: integer
          format: int64
          example: 1
        self_introduction:
          type: string
          example: よろしくお願いします！
    Login:
      type: object
      properties:
        login_id:
          type: integer
          format: int64
          example: 1234
        login_password:
          type: integer
          format: int64
          example: password
  parameters:
    UserId:
      name: user_id
      in: path
      description: ユーザーID
      required: true
      schema:
        type: integer
        format: int64
    ChatRoomId:
      name: chat_room_id
      in: path
      description: チャットルームID
      required: true
      schema:
        type: integer
        format: int64
